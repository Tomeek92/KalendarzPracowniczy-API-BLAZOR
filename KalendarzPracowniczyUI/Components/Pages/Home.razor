@page "/"
@using System.Globalization
@rendermode InteractiveServer
<NavigationMenu />

<div class="weekly-schedule-container">
    <div class="logo-page">
    <img src="UNISOFT_logo_CMYK_z_polem_ochronnym_alfa.png" />
</div>
    <div class="calendar-controls">
        <button @onclick="PreviousWeek">❮ Poprzedni tydzień</button>
        <h2>@currentWeekStart.ToString("MMMM yyyy", new System.Globalization.CultureInfo("pl-PL"))</h2>
        <button @onclick="NextWeek">Następny tydzień ❯</button>
    </div>
    <div class="schedule-grid">
        <div class="schedule-header">
            <div class="schedule-column">Pracownicy</div>
            @foreach (var day in GetDaysOfWeek())
            {
                <div class="schedule-column">
                    @day.ToString("ddd", new System.Globalization.CultureInfo("pl-PL"))<br />
                    @day.Day
                </div>
            }
        </div>

        @foreach (var user in users)
        {
            <div class="schedule-row">
                <div class="employee-cell">@user.FirstName @user.LastName</div>
                @foreach (var day in GetDaysOfWeek())
                {
                    <div class="day-cell-wrapper">
                        <div @onclick="() => ShowModal(day)" class="day-cell @(day.Date == DateTime.Today.Date ? "today" : "")"></div>
                        <a @onclick="ShowSecondModal" class="fa-solid fa-pen"></a>
                    </div>
                }
            </div>
        }
    </div>
    <br />
    <div class="samochody-flota">
        <div class="logo-samochody">
            <img src="car_logo_PNG1664.png"/>
            <p>Rapid 1.4D Kosiarka (GA128AM)</p>
        </div>
        <div class="logo-samochody">
            <img src="car_logo_PNG1664.png"/>
            <p>Rapid 1.6D (GA6274U)</p>
        </div>
        <div class="logo-samochody">
            <img src="car_logo_PNG1664.png" />
            <p>Super B (CB225ME)</p>
        </div>
        <div class="logo-samochody">
            <img src="R.png"/>
            <p>Toyota (GA370EN)</p>
        </div>
    </div>
</div>


@if (selectedDay.HasValue)
{
    <div class="my_modal">
        <div class="my_modal_content">
            <h1 class="close" @onclick="HideModal">&times;</h1>
            <Event/>
        </div>
    </div>
}
@if (isVisible)
{
    <div class="my_modal">
        <div class="my_modal_content">
            <h1 class="close" @onclick="CloseModal">&times;</h1>
            <UpdateEvent />
        </div>
    </div>
}

@code {
    private DateTime? selectedDay = null;
    private bool isVisible = false;
    private void CloseModal()
    {
        isVisible = false;
    }
    private void ShowSecondModal()
    {
        isVisible = true;
    }
    private void HideModal()
    {
        selectedDay = null; 
        
    }

    private void ShowModal(DateTime day)
    {
        selectedDay = day; 
    }

    private bool IsModalVisible(DateTime day)
    {
        return selectedDay.HasValue && selectedDay.Value.Date == day.Date; 
    }
    private List<User> users = new List<User>();
    private DateTime currentWeekStart = DateTime.Today.AddDays(-(int)DateTime.Today.DayOfWeek + (int)DayOfWeek.Monday);

    private IEnumerable<DateTime> GetDaysOfWeek()
    {
        return Enumerable.Range(0, 5).Select(offset => currentWeekStart.AddDays(offset));
    }

    private void PreviousWeek()
    {
        currentWeekStart = currentWeekStart.AddDays(-7);
        StateHasChanged();
    }

    private void NextWeek()
    {
        currentWeekStart = currentWeekStart.AddDays(7);
        StateHasChanged();
    }

    protected override async Task OnInitializedAsync()
    {
        
        users = new List<User>
        {
            new User { FirstName = "Jan", LastName = "Kowalski" },
            new User { FirstName = "Anna", LastName = "Nowak" },
            new User { FirstName = "Piotr", LastName = "Wójcik" }
        };
    }

    public class User
    {
        public string FirstName { get; set; }
        public string LastName { get; set; }
    }
}




